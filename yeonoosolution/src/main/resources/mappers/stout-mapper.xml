<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.choongang.yeonsolution.sales.sdm.domain.stout-mapper">
   
   <select id="sdmSelectOutList" resultType="SDMStOutDto">
      SELECT  s.out_type, s.out_code, s.delete_status,
              s.customer_code, c.company_name, 
              s.out_date, s.order_code, s.reg_user,
              s.reg_date, s.update_user , s.update_date, 
               COALESCE(s.memo, ' ') AS memo
      FROM st_out s
      LEFT JOIN company c 
      ON s.customer_code = c.company_code
      WHERE s.delete_status = 'N'
	      <if test="customerCode != null and customerCode != ''">
	         AND s.customer_code = #{customerCode}
	      </if>
      ORDER BY LENGTH(s.out_code),s.out_code ASC
   </select>

   <select id="sdmSelectStOutDetailDtoListByOutCode" resultType="SDMStOutDto" parameterType="SDMStOutDto" >
      SELECT sd.out_code, sd.item_code, i.item_name, sd.out_quantity,
             i.sales_price, sd.wh_code, sd.sorder, w.wh_name,
             (i.sales_price * sd.out_quantity) AS totalPrice,
              sd.memo
      FROM st_out_detail sd
      LEFT JOIN item i
      ON sd.item_code = i.item_code
      LEFT JOIN wh w
      ON sd.wh_code = w.wh_code
      WHERE sd.out_code = #{outCode}
      ORDER BY sd.sorder asc
   </select> 
   
   <update id="sdmUpdateOutTypeConfirm" parameterType="java.lang.String">
      UPDATE st_out 
      SET out_type = '확정'
      WHERE out_code = #{outCode}
   </update>
   
   <update id="sdmUpdateOutTypeConfirmCancel" parameterType="java.lang.String">
      UPDATE st_out 
      SET out_type = '저장'
      WHERE out_code = #{outCode}
   </update>
   
   <!-- <select id="JHOutTypeCCYN" parameterType="java.lang.String" resultType="SDMStOutDto" >
      SELECT out_type
      FROM st_out
      WHERE out_code = #{outCode}
   </select>  -->
   
   <insert id="sdmInsertStOut" parameterType="SDMStOutDto">
      <selectKey keyProperty="outCode" resultType="String" order="BEFORE">
          SELECT 'OUT_CODE' || out_code_seq.nextval FROM DUAL
       </selectKey>
      INSERT INTO st_out (out_code,                                 order_code,     
                     company_code,   customer_code, 
                          begin_end_inventory,   reg_date,    reg_user,    update_date, 
                          update_user,    out_date,    out_type,   delete_status,    memo)
                          
                    VALUES (#{outCode},                        #{orderCode},  
                          'COMPANY1', #{customerCode},
                          #{beginEndInventory},  sysdate,     #{memberName}, null,
                          null,           #{outDate},  '저장',      'N',              #{memo})
      
   </insert>
   
   <update id="sdmDeleteStOut" parameterType="java.lang.String">
      UPDATE st_out
      SET delete_status = 'Y'
      WHERE out_code = #{outCode}
   </update>
   
   <update id="sdmUpdateStOut" parameterType="SDMStOutDto">
      UPDATE st_out 
      SET customer_code = #{customerCode},
         out_date = #{outDate},
         update_user = #{memberName},
         update_date = sysdate,
         memo = #{memo}
      WHERE out_code = #{outCode}
   </update>
   
   <update id="sdmUpdateStOutItemByOutCodeAndSorder" parameterType="SDMStOutDto">
      UPDATE st_out_detail 
      SET out_quantity = #{outQuantity},
         memo = #{memo2}
      WHERE out_code = #{outCode} and sorder = #{sorder}
   </update>
   
   <select id="sdmCompanyCodeList" resultType="SDMStOutDto">
      SELECT company_code FROM company where use_yn = 'Y' ORDER BY LENGTH(company_code),company_code ASC
   </select>
   
   <select id="sdmOutCodeList" resultType="SDMStOutDto">
      SELECT DISTINCT out_code FROM st_out WHERE delete_status = 'N' ORDER BY LENGTH(out_code),out_code ASC
   </select>
   
   <select id="sdmWhCodeList" resultType="SDMStOutDto">
      SELECT wh_code, wh_name FROM wh WHERE use_yn ='Y' ORDER BY LENGTH(wh_code),wh_code ASC
   </select>
   
   <select id="sdmItemCodeList" resultType="SDMStOutDto">
      SELECT item_code, item_name FROM item WHERE wh_code = 'WH1' and use_yn = 'Y' ORDER BY LENGTH(item_code),item_code ASC
   </select>

   <delete id="sdmDeleteStOutItemByOutCodeAndSorder" parameterType="SDMStOutDto">
	  DELETE FROM st_out_detail
	  WHERE out_code = #{outCode}
      AND sorder = #{sorder}
   </delete>   
   
   <select id="sdmInsertStOutItem" parameterType="SDMStOutDto" statementType="CALLABLE">
      {
         CALL STOUT_DETAIL_INSERT(
            #{outCode,          mode=IN,  jdbcType=VARCHAR},
            #{whCode,          mode=IN,  jdbcType=VARCHAR},
            #{itemCode,       mode=IN,  jdbcType=VARCHAR},
            #{outQuantity,       mode=IN,  jdbcType=NUMERIC},
            #{memo2,          mode=IN,  jdbcType=VARCHAR}
         )
      }   
         
   </select>
   
   
   
   
   
   <select id="sdmSelectStOutWithDetailByCustomerCode" resultType="SDMStOutDto">
      SELECT s.delete_status,
                s.out_type, s.customer_code, c.company_name, 
              s.order_code, s.out_code, s.out_date, s.reg_user,
              s.reg_date, i.item_name, i.item_code, sd.out_quantity,
                i.sales_price, (i.sales_price * sd.out_quantity) AS totalPrice,
                sd.memo as memo2
      FROM st_out_detail sd
      LEFT JOIN st_out s
      ON sd.out_code = s.out_code
      LEFT JOIN item i
      ON sd.item_code = i.item_code
      LEFT JOIN company c
      ON s.customer_code = c.company_code
      WHERE s.delete_status = 'N' 
      <choose>
             <when test="customerCode != null and customerCode != ''">
                and s.customer_code = #{customerCode}
             </when>
        </choose>
      ORDER BY LENGTH(c.company_code),c.company_code ASC, sd.sorder ASC
   </select>
   
   <select id="sdmSelectCompanyCodeList2" resultType="SDMStOutDto">
      SELECT company_code FROM company where use_yn = 'Y'
   </select>
   
   <update id="sdmUpdateWhStockDatilMiu"  parameterType="SDMStOutDto">
      UPDATE wh_stock_detail
      SET good_quantity = good_quantity - #{outQuantity}
      WHERE item_code = #{itemCode} and wh_code = #{whCode} 
   </update>
   
   <update id="sdmUpdateWhStockDatilPlus"  parameterType="SDMStOutDto">
      UPDATE wh_stock_detail
      SET good_quantity = good_quantity + #{outQuantity}
      WHERE item_code = #{itemCode} and wh_code = #{whCode} 
   </update>
   
</mapper>